// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.VendingMachine;

namespace WebApp.VendingMachine.Migrations
{
    [DbContext(typeof(VendingMachineContext))]
    partial class VendingMachineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApp.VendingMachine.Coin", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("CountInVM");

                    b.Property<int>("Denomination")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<Guid?>("vendingMachineItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ItemId");

                    b.HasIndex("vendingMachineItemId");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("WebApp.VendingMachine.Drink", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("CountInVM");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("vendingMachineItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ItemId");

                    b.HasIndex("vendingMachineItemId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("WebApp.VendingMachine.VendingMachineViewModel", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.ToTable("VendingMachineViewModel");
                });

            modelBuilder.Entity("WebApp.VendingMachine.Coin", b =>
                {
                    b.HasOne("WebApp.VendingMachine.VendingMachineViewModel", "vendingMachine")
                        .WithMany("Coins")
                        .HasForeignKey("vendingMachineItemId");

                    b.Navigation("vendingMachine");
                });

            modelBuilder.Entity("WebApp.VendingMachine.Drink", b =>
                {
                    b.HasOne("WebApp.VendingMachine.VendingMachineViewModel", "vendingMachine")
                        .WithMany("Drinks")
                        .HasForeignKey("vendingMachineItemId");

                    b.Navigation("vendingMachine");
                });

            modelBuilder.Entity("WebApp.VendingMachine.VendingMachineViewModel", b =>
                {
                    b.Navigation("Coins");

                    b.Navigation("Drinks");
                });
#pragma warning restore 612, 618
        }
    }
}
